package edu.dsa.clinic;

import edu.dsa.clinic.control.DispensaryController;
import edu.dsa.clinic.dto.ConsultationQueue;
import edu.dsa.clinic.dto.Range;
import edu.dsa.clinic.dto.Schedule;
import edu.dsa.clinic.dto.Shift;
import edu.dsa.clinic.dto.ShiftType;
import edu.dsa.clinic.entity.Appointment;
import edu.dsa.clinic.entity.Consultation;
import edu.dsa.clinic.entity.ConsultationType;
import edu.dsa.clinic.entity.Diagnosis;
import edu.dsa.clinic.entity.Doctor;
import edu.dsa.clinic.entity.Gender;
import edu.dsa.clinic.entity.Medicine;
import edu.dsa.clinic.entity.MedicineAdministrationType;
import edu.dsa.clinic.entity.MedicineType;
import edu.dsa.clinic.entity.Patient;
import edu.dsa.clinic.entity.Prescription;
import edu.dsa.clinic.entity.Product;
import edu.dsa.clinic.entity.Specialization;
import edu.dsa.clinic.entity.Stock;
import edu.dsa.clinic.entity.Treatment;
import edu.dsa.clinic.filter.MedicineFilter;
import edu.dsa.clinic.filter.ProductFilter;

import java.math.BigDecimal;
import java.time.DayOfWeek;
import java.time.LocalDateTime;
import java.time.LocalTime;

public class Initializer {
    private Initializer() {
    }

    public static void initialize() {
        initializePatients();
        initializeDoctors();
        initializeMedicines();
        initializeProducts();
        initializeStocks();
        initializeAppointments();
        initializeConsultation1();
        initializeConsultation2();
        initializeConsultation3();
        initializeConsultation4();
        initializeConsultation5();
        initializeConsultation6();
        initializeDispenses();

        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(1), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(2), ConsultationType.SPECIALIST));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(3), ConsultationType.EMERGENCY));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(4), ConsultationType.FOLLOW_UP));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(5), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(6), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(7), ConsultationType.SPECIALIST));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(8), ConsultationType.FOLLOW_UP));
    }

    private static void initializePatients() {
        Database.patientsList.add(((Patient) new Patient().setId(1)).setName("Ahmad Faiz").setGender(Gender.MALE).setIdentification("900101-14-1234").setContactNumber("+60123450001"));
        Database.patientsList.add(((Patient) new Patient().setId(2)).setName("Nurul Aisyah").setGender(Gender.FEMALE).setIdentification("880305-08-5678").setContactNumber("+60123450002"));
        Database.patientsList.add(((Patient) new Patient().setId(3)).setName("Muhammad Hafiz").setGender(Gender.MALE).setIdentification("950712-10-4321").setContactNumber("+60123450003"));
        Database.patientsList.add(((Patient) new Patient().setId(4)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("920918-12-8765").setContactNumber("+60123450004"));
        Database.patientsList.add(((Patient) new Patient().setId(5)).setName("Ahmad Zulkifli").setGender(Gender.MALE).setIdentification("970424-05-1122").setContactNumber("+60123450005"));
        Database.patientsList.add(((Patient) new Patient().setId(6)).setName("Farah Hani").setGender(Gender.FEMALE).setIdentification("890623-09-3344").setContactNumber("+60123450006"));
        Database.patientsList.add(((Patient) new Patient().setId(7)).setName("Daniel Lim").setGender(Gender.MALE).setIdentification("930802-11-5566").setContactNumber("+60123450007"));
        Database.patientsList.add(((Patient) new Patient().setId(8)).setName("Chong Wei").setGender(Gender.MALE).setIdentification("910707-03-7788").setContactNumber("+60123450008"));
        Database.patientsList.add(((Patient) new Patient().setId(9)).setName("Aina Sofea").setGender(Gender.FEMALE).setIdentification("960115-06-9900").setContactNumber("+60123450009"));
        Database.patientsList.add(((Patient) new Patient().setId(10)).setName("Hafizah Rahman").setGender(Gender.FEMALE).setIdentification("940321-01-2233").setContactNumber("+60123450010"));
        Database.patientsList.add(((Patient) new Patient().setId(11)).setName("Syafiq Amir").setGender(Gender.MALE).setIdentification("901231-07-3344").setContactNumber("+60123450011"));
        Database.patientsList.add(((Patient) new Patient().setId(12)).setName("Noraini Hassan").setGender(Gender.FEMALE).setIdentification("881215-02-4455").setContactNumber("+60123450012"));
        Database.patientsList.add(((Patient) new Patient().setId(13)).setName("Irfan Azman").setGender(Gender.MALE).setIdentification("950606-09-5566").setContactNumber("+60123450013"));
        Database.patientsList.add(((Patient) new Patient().setId(14)).setName("Fatin Nadira").setGender(Gender.FEMALE).setIdentification("921101-05-6677").setContactNumber("+60123450014"));
        Database.patientsList.add(((Patient) new Patient().setId(15)).setName("Adib Syahmi").setGender(Gender.MALE).setIdentification("970530-03-7788").setContactNumber("+60123450015"));
        Database.patientsList.add(((Patient) new Patient().setId(16)).setName("Sabrina Khairun").setGender(Gender.FEMALE).setIdentification("890809-11-8899").setContactNumber("+60123450016"));
        Database.patientsList.add(((Patient) new Patient().setId(17)).setName("Wei Ling").setGender(Gender.FEMALE).setIdentification("930202-06-9900").setContactNumber("+60123450017"));
        Database.patientsList.add(((Patient) new Patient().setId(18)).setName("Jonathan Tan").setGender(Gender.MALE).setIdentification("910415-04-1122").setContactNumber("+60123450018"));
        Database.patientsList.add(((Patient) new Patient().setId(19)).setName("Nur Farah").setGender(Gender.FEMALE).setIdentification("960730-08-2233").setContactNumber("+60123450019"));
        Database.patientsList.add(((Patient) new Patient().setId(20)).setName("Ahmad Irfan").setGender(Gender.MALE).setIdentification("940909-12-3344").setContactNumber("+60123450020"));
        Database.patientsList.add(((Patient) new Patient().setId(21)).setName("Siti Zulaikha").setGender(Gender.FEMALE).setIdentification("900424-05-4455").setContactNumber("+60123450021"));
        Database.patientsList.add(((Patient) new Patient().setId(22)).setName("Daniel Ong").setGender(Gender.MALE).setIdentification("880610-09-5566").setContactNumber("+60123450022"));
        Database.patientsList.add(((Patient) new Patient().setId(23)).setName("Aina Najwa").setGender(Gender.FEMALE).setIdentification("950101-11-6677").setContactNumber("+60123450023"));
        Database.patientsList.add(((Patient) new Patient().setId(24)).setName("Hafiz Adnan").setGender(Gender.MALE).setIdentification("921212-03-7788").setContactNumber("+60123450024"));
        Database.patientsList.add(((Patient) new Patient().setId(25)).setName("Farah Iman").setGender(Gender.FEMALE).setIdentification("970303-07-8899").setContactNumber("+60123450025"));
        Database.patientsList.add(((Patient) new Patient().setId(26)).setName("Lim Wei Jie").setGender(Gender.MALE).setIdentification("890808-02-9900").setContactNumber("+60123450026"));
        Database.patientsList.add(((Patient) new Patient().setId(27)).setName("Chong Mei Ling").setGender(Gender.FEMALE).setIdentification("930515-06-1122").setContactNumber("+60123450027"));
        Database.patientsList.add(((Patient) new Patient().setId(28)).setName("Ahmad Danish").setGender(Gender.MALE).setIdentification("910707-10-2233").setContactNumber("+60123450028"));
        Database.patientsList.add(((Patient) new Patient().setId(29)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960909-04-3344").setContactNumber("+60123450029"));
        Database.patientsList.add(((Patient) new Patient().setId(30)).setName("Muhammad Rizal").setGender(Gender.MALE).setIdentification("940101-08-4455").setContactNumber("+60123450030"));
        Database.patientsList.add(((Patient) new Patient().setId(31)).setName("Nurul Izzah").setGender(Gender.FEMALE).setIdentification("900515-12-5566").setContactNumber("+60123450031"));
        Database.patientsList.add(((Patient) new Patient().setId(32)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("880303-03-6677").setContactNumber("+60123450032"));
        Database.patientsList.add(((Patient) new Patient().setId(33)).setName("Sabrina Syafiqah").setGender(Gender.FEMALE).setIdentification("950909-07-7788").setContactNumber("+60123450033"));
        Database.patientsList.add(((Patient) new Patient().setId(34)).setName("Wei Han").setGender(Gender.MALE).setIdentification("921212-01-8899").setContactNumber("+60123450034"));
        Database.patientsList.add(((Patient) new Patient().setId(35)).setName("Jonathan Lee").setGender(Gender.MALE).setIdentification("970101-05-9900").setContactNumber("+60123450035"));
        Database.patientsList.add(((Patient) new Patient().setId(36)).setName("Nurul Huda").setGender(Gender.FEMALE).setIdentification("890909-09-1122").setContactNumber("+60123450036"));
        Database.patientsList.add(((Patient) new Patient().setId(37)).setName("Ahmad Nabil").setGender(Gender.MALE).setIdentification("930303-04-2233").setContactNumber("+60123450037"));
        Database.patientsList.add(((Patient) new Patient().setId(38)).setName("Siti Sarah").setGender(Gender.FEMALE).setIdentification("910808-11-3344").setContactNumber("+60123450038"));
        Database.patientsList.add(((Patient) new Patient().setId(39)).setName("Hafiz Firdaus").setGender(Gender.MALE).setIdentification("960101-06-4455").setContactNumber("+60123450039"));
        Database.patientsList.add(((Patient) new Patient().setId(40)).setName("Farah Aina").setGender(Gender.FEMALE).setIdentification("940404-08-5566").setContactNumber("+60123450040"));
        Database.patientsList.add(((Patient) new Patient().setId(41)).setName("Ahmad Saif").setGender(Gender.MALE).setIdentification("900305-01-1122").setContactNumber("+60123450041"));
        Database.patientsList.add(((Patient) new Patient().setId(42)).setName("Siti Aishah").setGender(Gender.FEMALE).setIdentification("880712-02-2233").setContactNumber("+60123450042"));
        Database.patientsList.add(((Patient) new Patient().setId(43)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("950901-03-3344").setContactNumber("+60123450043"));
        Database.patientsList.add(((Patient) new Patient().setId(44)).setName("Nur Farzana").setGender(Gender.FEMALE).setIdentification("921001-04-4455").setContactNumber("+60123450044"));
        Database.patientsList.add(((Patient) new Patient().setId(45)).setName("Adib Zulkarnain").setGender(Gender.MALE).setIdentification("970212-05-5566").setContactNumber("+60123450045"));
        Database.patientsList.add(((Patient) new Patient().setId(46)).setName("Fatin Amani").setGender(Gender.FEMALE).setIdentification("890109-06-6677").setContactNumber("+60123450046"));
        Database.patientsList.add(((Patient) new Patient().setId(47)).setName("Lim Shi Wen").setGender(Gender.MALE).setIdentification("930601-07-7788").setContactNumber("+60123450047"));
        Database.patientsList.add(((Patient) new Patient().setId(48)).setName("Chong Mei Fang").setGender(Gender.FEMALE).setIdentification("910803-08-8899").setContactNumber("+60123450048"));
        Database.patientsList.add(((Patient) new Patient().setId(49)).setName("Ahmad Hakim").setGender(Gender.MALE).setIdentification("960506-09-9900").setContactNumber("+60123450049"));
        Database.patientsList.add(((Patient) new Patient().setId(50)).setName("Siti Nurul").setGender(Gender.FEMALE).setIdentification("940202-10-1122").setContactNumber("+60123450050"));
        Database.patientsList.add(((Patient) new Patient().setId(51)).setName("Muhammad Haziq").setGender(Gender.MALE).setIdentification("900707-11-2233").setContactNumber("+60123450051"));
        Database.patientsList.add(((Patient) new Patient().setId(52)).setName("Nurul Hidayah").setGender(Gender.FEMALE).setIdentification("880808-12-3344").setContactNumber("+60123450052"));
        Database.patientsList.add(((Patient) new Patient().setId(53)).setName("Ahmad Firdaus").setGender(Gender.MALE).setIdentification("950505-01-4455").setContactNumber("+60123450053"));
        Database.patientsList.add(((Patient) new Patient().setId(54)).setName("Siti Khadijah").setGender(Gender.FEMALE).setIdentification("921212-02-5566").setContactNumber("+60123450054"));
        Database.patientsList.add(((Patient) new Patient().setId(55)).setName("Adib Farhan").setGender(Gender.MALE).setIdentification("970303-03-6677").setContactNumber("+60123450055"));
        Database.patientsList.add(((Patient) new Patient().setId(56)).setName("Fatin Najwa").setGender(Gender.FEMALE).setIdentification("890909-04-7788").setContactNumber("+60123450056"));
        Database.patientsList.add(((Patient) new Patient().setId(57)).setName("Wei Jie").setGender(Gender.MALE).setIdentification("930101-05-8899").setContactNumber("+60123450057"));
        Database.patientsList.add(((Patient) new Patient().setId(58)).setName("Jonathan Chia").setGender(Gender.MALE).setIdentification("910202-06-9900").setContactNumber("+60123450058"));
        Database.patientsList.add(((Patient) new Patient().setId(59)).setName("Nurul Syahirah").setGender(Gender.FEMALE).setIdentification("960606-07-1122").setContactNumber("+60123450059"));
        Database.patientsList.add(((Patient) new Patient().setId(60)).setName("Ahmad Faizal").setGender(Gender.MALE).setIdentification("940707-08-2233").setContactNumber("+60123450060"));
        Database.patientsList.add(((Patient) new Patient().setId(61)).setName("Siti Hawa").setGender(Gender.FEMALE).setIdentification("900808-09-3344").setContactNumber("+60123450061"));
        Database.patientsList.add(((Patient) new Patient().setId(62)).setName("Muhammad Aiman").setGender(Gender.MALE).setIdentification("880909-10-4455").setContactNumber("+60123450062"));
        Database.patientsList.add(((Patient) new Patient().setId(63)).setName("Nurul Iman").setGender(Gender.FEMALE).setIdentification("950101-11-5566").setContactNumber("+60123450063"));
        Database.patientsList.add(((Patient) new Patient().setId(64)).setName("Adib Syafiq").setGender(Gender.MALE).setIdentification("921212-12-6677").setContactNumber("+60123450064"));
        Database.patientsList.add(((Patient) new Patient().setId(65)).setName("Fatin Husna").setGender(Gender.FEMALE).setIdentification("970303-01-7788").setContactNumber("+60123450065"));
        Database.patientsList.add(((Patient) new Patient().setId(66)).setName("Lim Wei Han").setGender(Gender.MALE).setIdentification("890909-02-8899").setContactNumber("+60123450066"));
        Database.patientsList.add(((Patient) new Patient().setId(67)).setName("Chong Mei Hui").setGender(Gender.FEMALE).setIdentification("930101-03-9900").setContactNumber("+60123450067"));
        Database.patientsList.add(((Patient) new Patient().setId(68)).setName("Ahmad Hafiz").setGender(Gender.MALE).setIdentification("910202-04-1122").setContactNumber("+60123450068"));
        Database.patientsList.add(((Patient) new Patient().setId(69)).setName("Siti Aina").setGender(Gender.FEMALE).setIdentification("960606-05-2233").setContactNumber("+60123450069"));
        Database.patientsList.add(((Patient) new Patient().setId(70)).setName("Muhammad Farid").setGender(Gender.MALE).setIdentification("940707-06-3344").setContactNumber("+60123450070"));
        Database.patientsList.add(((Patient) new Patient().setId(71)).setName("Nurul Shafiqah").setGender(Gender.FEMALE).setIdentification("900808-07-4455").setContactNumber("+60123450071"));
        Database.patientsList.add(((Patient) new Patient().setId(72)).setName("Ahmad Zain").setGender(Gender.MALE).setIdentification("880909-08-5566").setContactNumber("+60123450072"));
        Database.patientsList.add(((Patient) new Patient().setId(73)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("950101-09-6677").setContactNumber("+60123450073"));
        Database.patientsList.add(((Patient) new Patient().setId(74)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("921212-10-7788").setContactNumber("+60123450074"));
        Database.patientsList.add(((Patient) new Patient().setId(75)).setName("Fatin Aisyah").setGender(Gender.FEMALE).setIdentification("970303-11-8899").setContactNumber("+60123450075"));
        Database.patientsList.add(((Patient) new Patient().setId(76)).setName("Lim Shi Han").setGender(Gender.MALE).setIdentification("890909-12-9900").setContactNumber("+60123450076"));
        Database.patientsList.add(((Patient) new Patient().setId(77)).setName("Chong Mei Yan").setGender(Gender.FEMALE).setIdentification("930101-01-1122").setContactNumber("+60123450077"));
        Database.patientsList.add(((Patient) new Patient().setId(78)).setName("Ahmad Haziq").setGender(Gender.MALE).setIdentification("910202-02-2233").setContactNumber("+60123450078"));
        Database.patientsList.add(((Patient) new Patient().setId(79)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960606-03-3344").setContactNumber("+60123450079"));
        Database.patientsList.add(((Patient) new Patient().setId(80)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("940707-04-4455").setContactNumber("+60123450080"));
        Database.patientsList.add(((Patient) new Patient().setId(81)).setName("Nurul Izzah").setGender(Gender.FEMALE).setIdentification("900808-05-5566").setContactNumber("+60123450081"));
        Database.patientsList.add(((Patient) new Patient().setId(82)).setName("Ahmad Faizal").setGender(Gender.MALE).setIdentification("880909-06-6677").setContactNumber("+60123450082"));
        Database.patientsList.add(((Patient) new Patient().setId(83)).setName("Siti Nadira").setGender(Gender.FEMALE).setIdentification("950101-07-7788").setContactNumber("+60123450083"));
        Database.patientsList.add(((Patient) new Patient().setId(84)).setName("Adib Syahmi").setGender(Gender.MALE).setIdentification("921212-08-8899").setContactNumber("+60123450084"));
        Database.patientsList.add(((Patient) new Patient().setId(85)).setName("Fatin Husna").setGender(Gender.FEMALE).setIdentification("970303-09-9900").setContactNumber("+60123450085"));
        Database.patientsList.add(((Patient) new Patient().setId(86)).setName("Lim Wei Han").setGender(Gender.MALE).setIdentification("890909-10-1122").setContactNumber("+60123450086"));
        Database.patientsList.add(((Patient) new Patient().setId(87)).setName("Chong Mei Hui").setGender(Gender.FEMALE).setIdentification("930101-11-2233").setContactNumber("+60123450087"));
        Database.patientsList.add(((Patient) new Patient().setId(88)).setName("Ahmad Hafiz").setGender(Gender.MALE).setIdentification("910202-12-3344").setContactNumber("+60123450088"));
        Database.patientsList.add(((Patient) new Patient().setId(89)).setName("Siti Aina").setGender(Gender.FEMALE).setIdentification("960606-01-4455").setContactNumber("+60123450089"));
        Database.patientsList.add(((Patient) new Patient().setId(90)).setName("Muhammad Farid").setGender(Gender.MALE).setIdentification("940707-02-5566").setContactNumber("+60123450090"));
        Database.patientsList.add(((Patient) new Patient().setId(91)).setName("Nurul Shafiqah").setGender(Gender.FEMALE).setIdentification("900808-03-6677").setContactNumber("+60123450091"));
        Database.patientsList.add(((Patient) new Patient().setId(92)).setName("Ahmad Zain").setGender(Gender.MALE).setIdentification("880909-04-7788").setContactNumber("+60123450092"));
        Database.patientsList.add(((Patient) new Patient().setId(93)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("950101-05-8899").setContactNumber("+60123450093"));
        Database.patientsList.add(((Patient) new Patient().setId(94)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("921212-06-9900").setContactNumber("+60123450094"));
        Database.patientsList.add(((Patient) new Patient().setId(95)).setName("Fatin Aisyah").setGender(Gender.FEMALE).setIdentification("970303-07-1122").setContactNumber("+60123450095"));
        Database.patientsList.add(((Patient) new Patient().setId(96)).setName("Lim Shi Han").setGender(Gender.MALE).setIdentification("890909-08-2233").setContactNumber("+60123450096"));
        Database.patientsList.add(((Patient) new Patient().setId(97)).setName("Chong Mei Yan").setGender(Gender.FEMALE).setIdentification("930101-09-3344").setContactNumber("+60123450097"));
        Database.patientsList.add(((Patient) new Patient().setId(98)).setName("Ahmad Haziq").setGender(Gender.MALE).setIdentification("910202-10-4455").setContactNumber("+60123450098"));
        Database.patientsList.add(((Patient) new Patient().setId(99)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960606-11-5566").setContactNumber("+60123450099"));
        Database.patientsList.add(((Patient) new Patient().setId(100)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("940707-12-6677").setContactNumber("+60123450100"));
    }

    private static void initializeDoctors() {
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(1))
                        .setName("Bincent")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Neurosurgery)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(8, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(2))
                        .setName("Daren")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Ophthalmology)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(9, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(3))
                        .setName("KaiBing")
                        .setGender(Gender.FEMALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Orthopedics)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(22, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(4))
                        .setName("YiJia")
                        .setGender(Gender.FEMALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Pediatrics)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(21, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(5))
                        .setName("WenHan")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Otorhinolaryngology)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.THURSDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(16, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(((Doctor) new Doctor()
                .setId(6))
                .setName("Alex")
                .setGender(Gender.MALE)
                .setContactNumber("+100000006")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(7))
                .setName("Jordan")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000007")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(8))
                .setName("Taylor")
                .setGender(Gender.MALE)
                .setContactNumber("+100000008")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(9))
                .setName("Morgan")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000009")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(10))
                .setName("Casey")
                .setGender(Gender.MALE)
                .setContactNumber("+100000010")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(11))
                .setName("Riley")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000011")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(12))
                .setName("Jamie")
                .setGender(Gender.MALE)
                .setContactNumber("+100000012")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(13))
                .setName("Cameron")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000013")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(14))
                .setName("Drew")
                .setGender(Gender.MALE)
                .setContactNumber("+100000014")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(15))
                .setName("Quinn")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000015")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(16))
                .setName("Avery")
                .setGender(Gender.MALE)
                .setContactNumber("+100000016")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(17))
                .setName("Parker")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000017")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(18))
                .setName("Reese")
                .setGender(Gender.MALE)
                .setContactNumber("+100000018")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(19))
                .setName("Sawyer")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000019")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(20))
                .setName("Blake")
                .setGender(Gender.MALE)
                .setContactNumber("+100000020")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

    }

    private static void initializeMedicines() {
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(1))
                        .setName("Acetylsalicylic acid")
                        .addType(MedicineType.ANALGESICS)
                        .addType(MedicineType.ANTIPYRETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(2))
                        .setName("Paracetamol")
                        .addType(MedicineType.ANALGESICS)
                        .addType(MedicineType.ANTIPYRETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(3))
                        .setName("Ibuprofen")
                        .addType(MedicineType.ANALGESICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(4))
                        .setName("Penicillin")
                        .addType(MedicineType.ANTIBIOTICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(5))
                        .setName("Diphenhydramine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(6))
                        .setName("Centrizine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(7))
                        .setName("Loratadine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(8))
                        .setName("Warfarin")
                        .addType(MedicineType.ANTICOAGULANTS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(9))
                        .setName("Heparin")
                        .addType(MedicineType.ANTICOAGULANTS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(10))
                        .setName("Clozapine")
                        .addType(MedicineType.ANTIPSYCHOTICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(11))
                        .setName("Dexamethasone")
                        .addType(MedicineType.CORTICOSTEROIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(12))
                        .setName("Rosuvastatin")
                        .addType(MedicineType.STATINS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(13))
                        .setName("Calcium Carbonate")
                        .addType(MedicineType.ANTACIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(13))
                        .setName("Magnesium Hydroxide")
                        .addType(MedicineType.ANTACIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(14))
                        .setName("Ondansetron")
                        .addType(MedicineType.ANTIEMETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(15))
                        .setName("Metaclopramide")
                        .addType(MedicineType.ANTIEMETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(16))
                        .setName("Insulin")
                        .addType(MedicineType.ANTIDIABETICS)
        );

        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(17))
                        .setName("ABIRATERONE ACETATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(18))
                        .setName("ABIRATERONE ACETATE; NIRAPARIB TOSYLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(19))
                        .setName("ADALIMUMAB-ADBM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(20))
                        .setName("ADAPALENE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(21))
                        .setName("ALBENDAZOLE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(22))
                        .setName("ALEMTUZUMAB")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(23))
                        .setName("AMMONIUM LACTATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(24))
                        .setName("AMPHETAMINE SULFATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(25))
                        .setName("ARFORMOTEROL TARTRATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(26))
                        .setName("ARTEMETHER; LUMEFANTRINE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(27))
                        .setName("ARTESUNATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(28))
                        .setName("ATEZOLIZUMAB")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(29))
                        .setName("BARIUM SULFATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(30))
                        .setName("BENZOYL PEROXIDE; ERYTHROMYCIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(31))
                        .setName("BORTEZOMIB")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(32))
                        .setName("BRIGATINIB")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(33))
                        .setName("BROMPHENIRAMINE MALEATE; DEXTROMETHORPHAN HYDROBROMIDE; PSEUDOEPHEDRINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(34))
                        .setName("CALCIUM CHLORIDE; POTASSIUM CHLORIDE; SODIUM CHLORIDE; SODIUM LACTATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(35))
                        .setName("CARBINOXAMINE MALEATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(36))
                        .setName("CARISOPRODOL")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(37))
                        .setName("CEFACLOR")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(38))
                        .setName("CHLORPHENIRAMINE MALEATE; IBUPROFEN; PSEUDOEPHEDRINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(39))
                        .setName("CLARITHROMYCIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(40))
                        .setName("CLOMIPHENE CITRATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(41))
                        .setName("CLOMIPRAMINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(42))
                        .setName("COBICISTAT; DARUNAVIR ETHANOLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(43))
                        .setName("COBICISTAT; ELVITEGRAVIR; EMTRICITABINE; TENOFOVIR DISOPROXIL FUMARATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(44))
                        .setName("CORTICORELIN OVINE TRIFLUTATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(45))
                        .setName("CYCLOPENTOLATE HYDROCHLORIDE; PHENYLEPHRINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(46))
                        .setName("DENILEUKIN DIFTITOX")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(47))
                        .setName("DENOSUMAB-BBDZ")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(48))
                        .setName("DIHYDROERGOTAMINE MESYLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(49))
                        .setName("DROPERIDOL")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(50))
                        .setName("ELTROMBOPAG OLAMINE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(51))
                        .setName("ENALAPRIL MALEATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(52))
                        .setName("ENTACAPONE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(53))
                        .setName("FILGRASTIM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(54))
                        .setName("FILGRASTIM-AYOW")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(55))
                        .setName("FINERENONE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(56))
                        .setName("FITUSIRAN SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(57))
                        .setName("FLUOXETINE HYDROCHLORIDE; OLANZAPINE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(58))
                        .setName("FORMOTEROL FUMARATE; GLYCOPYRROLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(59))
                        .setName("GLUCAGON HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(60))
                        .setName("GUANFACINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(61))
                        .setName("HOMATROPINE METHYLBROMIDE; HYDROCODONE BITARTRATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(62))
                        .setName("IBANDRONATE SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(63))
                        .setName("ILOPROST")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(64))
                        .setName("INSULIN ASPART-SZJJ")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(65))
                        .setName("INSULIN DETEMIR")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(66))
                        .setName("ISOTRETINOIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(67))
                        .setName("LAMOTRIGINE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(68))
                        .setName("LEDIPASVIR; SOFOSBUVIR")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(69))
                        .setName("LINEZOLID")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(70))
                        .setName("LONCASTUXIMAB TESIRINE-LPYL")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(71))
                        .setName("LOTEPREDNOL ETABONATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(72))
                        .setName("LOVASTATIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(73))
                        .setName("LUMATEPERONE TOSYLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(74))
                        .setName("LURASIDONE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(75))
                        .setName("MAGNESIUM SULFATE; POTASSIUM CHLORIDE; POTASSIUM PHOSPHATE, MONOBASIC; SODIUM CHLORIDE; SODIUM PHOSPHATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(76))
                        .setName("MARSTACIMAB-HNCQ")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(77))
                        .setName("MELOXICAM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(78))
                        .setName("MESNA")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(79))
                        .setName("METHAMPHETAMINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(80))
                        .setName("METHOTREXATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(81))
                        .setName("METRELEPTIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(82))
                        .setName("MONTELUKAST SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(83))
                        .setName("MOXETUMOMAB PASUDOTOX-TDFK")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(84))
                        .setName("MYCOPHENOLATE SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(85))
                        .setName("NALOXONE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(86))
                        .setName("NALTREXONE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(87))
                        .setName("NAPROXEN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(88))
                        .setName("NIRAPARIB TOSYLATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(89))
                        .setName("OCRIPLASMIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(90))
                        .setName("OMEGA-3ACID ETHYL ESTERS")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(91))
                        .setName("PEGINTERFERON ALFA-2A")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(92))
                        .setName("PEGINTERFERON ALFA-2B")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(93))
                        .setName("PEGINTERFERON BETA-1A")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(94))
                        .setName("PEMETREXED DISODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(95))
                        .setName("PIPERACILLIN SODIUM; TAZOBACTAM SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(96))
                        .setName("PIVMECILLINAM HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(97))
                        .setName("PRALATREXATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(98))
                        .setName("PRAVASTATIN SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(99))
                        .setName("RABEPRAZOLE SODIUM")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(100))
                        .setName("RIPRETINIB")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(101))
                        .setName("ROPEGINTERFERON ALFA-2B-NJFT")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(102))
                        .setName("SACUBITRIL; VALSARTAN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(103))
                        .setName("SILODOSIN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(104))
                        .setName("SINECATECHINS")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(105))
                        .setName("STREPTOMYCIN SULFATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(106))
                        .setName("TESAMORELIN ACETATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(107))
                        .setName("THIORIDAZINE HYDROCHLORIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(108))
                        .setName("TIOTROPIUM BROMIDE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(109))
                        .setName("TOREMIFENE CITRATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(110))
                        .setName("TRANYLCYPROMINE SULFATE")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(111))
                        .setName("TRASTUZUMAB-DKST")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(112))
                        .setName("TREOSULFAN")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(113))
                        .setName("VENETOCLAX")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(114))
                        .setName("VENETOCLAX")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(115))
                        .setName("VESTRONIDASE ALFA-VJBK")
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(116))
                        .setName("ZILEUTON")
        );
    }

    private static void initializeProducts() {
        // https://ndclist.com/ndc/0536-1054/package/0536-1054-29/price
        Database.productList.add(
                ((Product) new Product()
                        .setId(1))
                        .setName("Aspirin")
                        .setBrand("Recadin")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(1)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0.01529"))
                        .setPrice(new BigDecimal("1"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(2))
                        .setName("Aspirin")
                        .setBrand("Viquprin")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(1)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0.01529"))
                        .setPrice(new BigDecimal("1"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-7021
                ((Product) new Product()
                        .setId(3))
                        .setName("Panadol PM")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(2)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-0620
                ((Product) new Product()
                        .setId(4))
                        .setName("Panadol Extra")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(2)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-0609
                ((Product) new Product()
                        .setId(5))
                        .setName("Panadol Extra Strength")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(2)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(6))
                        .setName("Paracetamol")
                        .setBrand("Tylenol")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(2)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(7))
                        .setName("Ibuprofen")
                        .setBrand("Advil")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(3)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(8))
                        .setName("Centrizine")
                        .setBrand("")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(6)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(9))
                        .setName("ABACAVIR SULFATE")
                        .setBrand("CHARTWELL RX")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(17)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("12.93"))
                        .setPrice(new BigDecimal("16.75"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(10))
                        .setName("ABIRATERONE ACETATE")
                        .setBrand("AMNEAL PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(17)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("9.50"))
                        .setPrice(new BigDecimal("10.93"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(11))
                        .setName("ABACAVIR SULFATE AND LAMIVUDINE")
                        .setBrand("LAURUS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(19)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.24"))
                        .setPrice(new BigDecimal("4.33"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(12))
                        .setName("ADAPALENE")
                        .setBrand("ACTAVIS MID ATLANTIC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(20)))
                        .setAdministrationType(MedicineAdministrationType.TOPICAL)
                        .setCost(new BigDecimal("10.53"))
                        .setPrice(new BigDecimal("11.86"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(13))
                        .setName("VERZENIO")
                        .setBrand("ELI LILLY AND CO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(24)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.59"))
                        .setPrice(new BigDecimal("16.22"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(14))
                        .setName("VERZENIO")
                        .setBrand("ELI LILLY AND CO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(24)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.59"))
                        .setPrice(new BigDecimal("16.22"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(15))
                        .setName("VERZENIO")
                        .setBrand("ELI LILLY AND CO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(24)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.23"))
                        .setPrice(new BigDecimal("11.97"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(16))
                        .setName("E-Z-CAT DRY")
                        .setBrand("BRACCO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(29)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.90"))
                        .setPrice(new BigDecimal("8.92"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(17))
                        .setName("E-Z-PAQUE")
                        .setBrand("BRACCO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(29)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.31"))
                        .setPrice(new BigDecimal("6.20"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(18))
                        .setName("ACARBOSE")
                        .setBrand("STRIDES PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(31)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.96"))
                        .setPrice(new BigDecimal("11.56"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(19))
                        .setName("ACETAMINOPHEN")
                        .setBrand("B BRAUN MEDICAL")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(34)))
                        .setAdministrationType(MedicineAdministrationType.INTRAVENOUS)
                        .setCost(new BigDecimal("2.91"))
                        .setPrice(new BigDecimal("4.17"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(20))
                        .setName("ACETAMINOPHEN, ASPIRIN AND CAFFEINE")
                        .setBrand("PERRIGO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(35)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.68"))
                        .setPrice(new BigDecimal("12.81"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(21))
                        .setName("CARISOPRODOL")
                        .setBrand("HERITAGE")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(36)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("4.71"))
                        .setPrice(new BigDecimal("5.82"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(22))
                        .setName("CARISOPRODOL")
                        .setBrand("NATCO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(36)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.74"))
                        .setPrice(new BigDecimal("8.23"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(23))
                        .setName("BUTALBITAL, ACETAMINOPHEN, CAFFEINE AND CODEINE PHOSPHATE")
                        .setBrand("HIKMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(38)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("14.45"))
                        .setPrice(new BigDecimal("15.63"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(24))
                        .setName("ACETAMINOPHEN AND CODEINE PHOSPHATE")
                        .setBrand("STRIDES PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(39)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.97"))
                        .setPrice(new BigDecimal("13.93"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(25))
                        .setName("BIAXIN XL")
                        .setBrand("ABBVIE INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(39)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("11.90"))
                        .setPrice(new BigDecimal("12.57"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(26))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("ABHAI LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("2.12"))
                        .setPrice(new BigDecimal("5.12"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(27))
                        .setName("CLOMIPHENE CITRATE")
                        .setBrand("APPCO")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.06"))
                        .setPrice(new BigDecimal("15.28"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(28))
                        .setName("ANEXSIA 5/325")
                        .setBrand("SPECGX LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("9.93"))
                        .setPrice(new BigDecimal("12.82"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(29))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("ASCENT PHARMS INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("2.18"))
                        .setPrice(new BigDecimal("4.51"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(30))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("SPECGX LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.13"))
                        .setPrice(new BigDecimal("17.05"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(31))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("ELITE LABS INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.61"))
                        .setPrice(new BigDecimal("11.24"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(32))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("AUROLIFE PHARMA LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.30"))
                        .setPrice(new BigDecimal("3.29"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(33))
                        .setName("HYDROCODONE BITARTRATE AND ACETAMINOPHEN")
                        .setBrand("SPECGX LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(40)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("2.19"))
                        .setPrice(new BigDecimal("5.66"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(34))
                        .setName("CLOMIPRAMINE HYDROCHLORIDE")
                        .setBrand("JUBILANT CADISTA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(41)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.82"))
                        .setPrice(new BigDecimal("18.25"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(35))
                        .setName("CLOMIPRAMINE HYDROCHLORIDE")
                        .setBrand("ZYDUS PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(41)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.87"))
                        .setPrice(new BigDecimal("3.02"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(36))
                        .setName("OXYCODONE AND ACETAMINOPHEN")
                        .setBrand("ASCENT PHARMS INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(43)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.94"))
                        .setPrice(new BigDecimal("17.60"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(37))
                        .setName("PERCOCET")
                        .setBrand("ENDO OPERATIONS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(43)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("4.12"))
                        .setPrice(new BigDecimal("8.62"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(38))
                        .setName("OXYCODONE AND ACETAMINOPHEN")
                        .setBrand("MIKART")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(43)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("9.14"))
                        .setPrice(new BigDecimal("10.14"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(39))
                        .setName("OXYCODONE AND ACETAMINOPHEN")
                        .setBrand("ABHAI LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(43)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.09"))
                        .setPrice(new BigDecimal("15.28"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(40))
                        .setName("TRAMADOL HYDROCHLORIDE AND ACETAMINOPHEN")
                        .setBrand("AUROBINDO PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(44)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("11.75"))
                        .setPrice(new BigDecimal("15.57"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(41))
                        .setName("ELTROMBOPAG OLAMINE")
                        .setBrand("ANNORA PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(50)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.17"))
                        .setPrice(new BigDecimal("4.93"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(42))
                        .setName("PROMACTA")
                        .setBrand("NOVARTIS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(50)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.81"))
                        .setPrice(new BigDecimal("7.82"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(43))
                        .setName("PROMACTA")
                        .setBrand("NOVARTIS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(50)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("2.34"))
                        .setPrice(new BigDecimal("3.27"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(44))
                        .setName("ENALAPRIL MALEATE")
                        .setBrand("AMNEAL")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(51)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.62"))
                        .setPrice(new BigDecimal("4.71"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(45))
                        .setName("ENTACAPONE")
                        .setBrand("AJANTA PHARMA LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(52)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.21"))
                        .setPrice(new BigDecimal("14.45"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(46))
                        .setName("KERENDIA")
                        .setBrand("BAYER HLTHCARE")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(55)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("4.27"))
                        .setPrice(new BigDecimal("6.29"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(47))
                        .setName("OLANZAPINE AND FLUOXETINE HYDROCHLORIDE")
                        .setBrand("TEVA PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.32"))
                        .setPrice(new BigDecimal("6.11"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(48))
                        .setName("ACYCLOVIR")
                        .setBrand("CHARTWELL RX")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.08"))
                        .setPrice(new BigDecimal("16.67"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(49))
                        .setName("ACYCLOVIR")
                        .setBrand("GLENMARK SPECLT")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.TOPICAL)
                        .setCost(new BigDecimal("10.98"))
                        .setPrice(new BigDecimal("13.62"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(50))
                        .setName("ACYCLOVIR")
                        .setBrand("YILING")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.02"))
                        .setPrice(new BigDecimal("12.85"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(51))
                        .setName("OLANZAPINE AND FLUOXETINE HYDROCHLORIDE")
                        .setBrand("EPIC PHARMA LLC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.37"))
                        .setPrice(new BigDecimal("9.57"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(52))
                        .setName("OLANZAPINE AND FLUOXETINE HYDROCHLORIDE")
                        .setBrand("TEVA PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("14.78"))
                        .setPrice(new BigDecimal("16.02"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(53))
                        .setName("ACYCLOVIR")
                        .setBrand("CARLSBAD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.88"))
                        .setPrice(new BigDecimal("10.39"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(54))
                        .setName("ACYCLOVIR")
                        .setBrand("CHARTWELL RX")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(57)))
                        .setAdministrationType(MedicineAdministrationType.TOPICAL)
                        .setCost(new BigDecimal("10.17"))
                        .setPrice(new BigDecimal("11.75"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(55))
                        .setName("INTUNIV")
                        .setBrand("TAKEDA PHARMS USA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(60)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.35"))
                        .setPrice(new BigDecimal("10.39"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(56))
                        .setName("GUANFACINE HYDROCHLORIDE")
                        .setBrand("AUROBINDO PHARMA USA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(60)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.69"))
                        .setPrice(new BigDecimal("11.17"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(57))
                        .setName("GUANFACINE HYDROCHLORIDE")
                        .setBrand("YICHANG HUMANWELL")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(60)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.17"))
                        .setPrice(new BigDecimal("18.86"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(58))
                        .setName("GUANFACINE HYDROCHLORIDE")
                        .setBrand("FOSUN WANBANG")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(60)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.11"))
                        .setPrice(new BigDecimal("6.08"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(59))
                        .setName("GUANFACINE HYDROCHLORIDE")
                        .setBrand("ALEMBIC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(60)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.22"))
                        .setPrice(new BigDecimal("3.13"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(60))
                        .setName("ABSORICA LD")
                        .setBrand("SUN PHARM")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.43"))
                        .setPrice(new BigDecimal("4.42"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(61))
                        .setName("CLARAVIS")
                        .setBrand("TEVA PHARMS USA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.86"))
                        .setPrice(new BigDecimal("10.21"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(62))
                        .setName("ISOTRETINOIN")
                        .setBrand("AMNEAL PHARMS NY")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("5.23"))
                        .setPrice(new BigDecimal("7.23"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(63))
                        .setName("MYORISAN")
                        .setBrand("UPSHER SMITH LABS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.05"))
                        .setPrice(new BigDecimal("7.31"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(64))
                        .setName("ABSORICA LD")
                        .setBrand("SUN PHARM")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("4.12"))
                        .setPrice(new BigDecimal("4.55"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(65))
                        .setName("ISOTRETINOIN")
                        .setBrand("AUROBINDO PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("9.05"))
                        .setPrice(new BigDecimal("11.99"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(66))
                        .setName("ABSORICA LD")
                        .setBrand("SUN PHARM")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(66)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.43"))
                        .setPrice(new BigDecimal("4.42"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(67))
                        .setName("LAMOTRIGINE")
                        .setBrand("AUROBINDO PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.63"))
                        .setPrice(new BigDecimal("2.34"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(68))
                        .setName("LAMOTRIGINE")
                        .setBrand("IPCA LABS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("12.77"))
                        .setPrice(new BigDecimal("15.19"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(69))
                        .setName("LAMOTRIGINE")
                        .setBrand("ALKEM LABS LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.59"))
                        .setPrice(new BigDecimal("13.42"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(70))
                        .setName("LAMOTRIGINE")
                        .setBrand("GLENMARK PHARMS LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("5.95"))
                        .setPrice(new BigDecimal("7.22"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(71))
                        .setName("LAMOTRIGINE")
                        .setBrand("TARO PHARM INDS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.85"))
                        .setPrice(new BigDecimal("7.37"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(72))
                        .setName("LAMOTRIGINE")
                        .setBrand("AUROBINDO PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("15.51"))
                        .setPrice(new BigDecimal("19.49"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(73))
                        .setName("LAMICTAL XR")
                        .setBrand("SMITHKLINE BEECHAM")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.64"))
                        .setPrice(new BigDecimal("6.01"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(74))
                        .setName("LAMOTRIGINE")
                        .setBrand("TORRENT PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.34"))
                        .setPrice(new BigDecimal("5.05"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(75))
                        .setName("LAMOTRIGINE")
                        .setBrand("AUROBINDO PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("1.63"))
                        .setPrice(new BigDecimal("2.34"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(76))
                        .setName("LAMOTRIGINE")
                        .setBrand("YILING")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(67)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.62"))
                        .setPrice(new BigDecimal("15.93"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(77))
                        .setName("ZYVOX")
                        .setBrand("PFIZER")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(69)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.38"))
                        .setPrice(new BigDecimal("4.04"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(78))
                        .setName("ADAPALENE AND BENZOYL PEROXIDE")
                        .setBrand("ACTAVIS LABS UT INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(73)))
                        .setAdministrationType(MedicineAdministrationType.TOPICAL)
                        .setCost(new BigDecimal("4.64"))
                        .setPrice(new BigDecimal("5.59"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(79))
                        .setName("LURASIDONE HYDROCHLORIDE")
                        .setBrand("HERITAGE PHARMA AVET")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(74)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("5.48"))
                        .setPrice(new BigDecimal("8.85"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(80))
                        .setName("LURASIDONE HYDROCHLORIDE")
                        .setBrand("AUROBINDO PHARMA LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(74)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.80"))
                        .setPrice(new BigDecimal("15.77"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(81))
                        .setName("LURASIDONE HYDROCHLORIDE")
                        .setBrand("CHARTWELL RX")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(74)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.26"))
                        .setPrice(new BigDecimal("10.45"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(82))
                        .setName("LURASIDONE HYDROCHLORIDE")
                        .setBrand("ZYDUS PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(74)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("14.15"))
                        .setPrice(new BigDecimal("15.64"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(83))
                        .setName("ADENOSINE")
                        .setBrand("MYLAN ASI")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(76)))
                        .setAdministrationType(MedicineAdministrationType.INTRAVENOUS)
                        .setCost(new BigDecimal("6.64"))
                        .setPrice(new BigDecimal("7.20"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(84))
                        .setName("MELOXICAM")
                        .setBrand("COREPHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(77)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.43"))
                        .setPrice(new BigDecimal("17.33"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(85))
                        .setName("MELOXICAM")
                        .setBrand("ZYDUS PHARMS USA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(77)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("12.77"))
                        .setPrice(new BigDecimal("13.21"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(86))
                        .setName("DESOXYN")
                        .setBrand("AJENAT PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(79)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.61"))
                        .setPrice(new BigDecimal("7.87"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(87))
                        .setName("MONTELUKAST SODIUM")
                        .setBrand("LANNETT CO INC")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(82)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("5.97"))
                        .setPrice(new BigDecimal("8.83"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(88))
                        .setName("MONTELUKAST SODIUM")
                        .setBrand("TEVA PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(82)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("2.09"))
                        .setPrice(new BigDecimal("3.17"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(89))
                        .setName("MONTELUKAST SODIUM")
                        .setBrand("UNIMARK REMEDIES LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(82)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("9.39"))
                        .setPrice(new BigDecimal("13.50"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(90))
                        .setName("MONTELUKAST SODIUM")
                        .setBrand("GLENMARK PHARMS LTD")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(82)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.90"))
                        .setPrice(new BigDecimal("14.47"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(91))
                        .setName("MONTELUKAST SODIUM")
                        .setBrand("AMNEAL PHARMS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(82)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.23"))
                        .setPrice(new BigDecimal("16.25"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(92))
                        .setName("NALTREXONE HYDROCHLORIDE")
                        .setBrand("BARR")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(86)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.80"))
                        .setPrice(new BigDecimal("8.16"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(93))
                        .setName("NAPROXEN")
                        .setBrand("TRUPHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(87)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.32"))
                        .setPrice(new BigDecimal("11.18"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(94))
                        .setName("NAPROXEN")
                        .setBrand("AMNEAL PHARMS NY")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(87)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("7.17"))
                        .setPrice(new BigDecimal("7.76"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(95))
                        .setName("ZEJULA")
                        .setBrand("GLAXOSMITHKLINE")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(88)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.75"))
                        .setPrice(new BigDecimal("11.48"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(96))
                        .setName("PEMETREXED DISODIUM")
                        .setBrand("JIANGSU HANSOH PHARM")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(94)))
                        .setAdministrationType(MedicineAdministrationType.INTRAVENOUS)
                        .setCost(new BigDecimal("3.26"))
                        .setPrice(new BigDecimal("7.60"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(97))
                        .setName("PEMETREXED DISODIUM")
                        .setBrand("MEITHEAL")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(94)))
                        .setAdministrationType(MedicineAdministrationType.INTRAVENOUS)
                        .setCost(new BigDecimal("4.44"))
                        .setPrice(new BigDecimal("6.25"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(98))
                        .setName("PEMETREXED DISODIUM")
                        .setBrand("ACCORD HLTHCARE")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(94)))
                        .setAdministrationType(MedicineAdministrationType.INTRAVENOUS)
                        .setCost(new BigDecimal("7.17"))
                        .setPrice(new BigDecimal("10.40"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(99))
                        .setName("PRAVASTATIN SODIUM")
                        .setBrand("CIPLA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(98)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("6.09"))
                        .setPrice(new BigDecimal("10.14"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(100))
                        .setName("PRAVASTATIN SODIUM")
                        .setBrand("APOTEX")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(98)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.88"))
                        .setPrice(new BigDecimal("15.88"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(101))
                        .setName("RABEPRAZOLE SODIUM")
                        .setBrand("TORRENT")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(99)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("12.24"))
                        .setPrice(new BigDecimal("14.31"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(102))
                        .setName("SACUBITRIL AND VALSARTAN")
                        .setBrand("BIOCON PHARMA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(102)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.01"))
                        .setPrice(new BigDecimal("10.85"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(103))
                        .setName("ENTRESTO")
                        .setBrand("NOVARTIS PHARMS CORP")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(102)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("8.05"))
                        .setPrice(new BigDecimal("8.89"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(104))
                        .setName("ALENDRONATE SODIUM")
                        .setBrand("CIPLA")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(103)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("13.09"))
                        .setPrice(new BigDecimal("16.34"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(105))
                        .setName("ALENDRONATE SODIUM")
                        .setBrand("WATSON LABS")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(103)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("14.35"))
                        .setPrice(new BigDecimal("18.12"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(106))
                        .setName("ALLOPURINOL")
                        .setBrand("HETERO LABS LTD V")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(111)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("10.78"))
                        .setPrice(new BigDecimal("13.01"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(107))
                        .setName("ALLOPURINOL")
                        .setBrand("PH HEALTH")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(111)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.60"))
                        .setPrice(new BigDecimal("5.69"))
        );

        Database.productList.add(
                ((Product) new Product()
                        .setId(108))
                        .setName("ALLOPURINOL")
                        .setBrand("PH HEALTH")
                        .setMedicine(Database.medicineList.findFirst(MedicineFilter.byId(111)))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("3.60"))
                        .setPrice(new BigDecimal("5.69"))
        );
    }

    private static void initializeStocks() {
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(32)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(32)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(60)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(40)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2024, 9, 1, 1, 51, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2024, 9, 1, 4, 6, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(725)
                        .setStockInDate(LocalDateTime.of(2024, 9, 2, 23, 38, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 23, 41, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(620)
                        .setStockInDate(LocalDateTime.of(2024, 8, 27, 23, 51, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 11, 33, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2024, 8, 27, 22, 8, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2024, 9, 3, 15, 22, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 7, 33, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2024, 9, 3, 10, 48, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 5, 8, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 17, 7, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(465)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 6, 59, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 13, 24, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(210)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 20, 10, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(140)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 12, 27, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2024, 8, 28, 5, 43, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2024, 9, 2, 23, 56, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(43)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 8, 5, 15))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2024, 8, 30, 17, 14, 25))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(905)
                        .setStockInDate(LocalDateTime.of(2024, 9, 1, 17, 31, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(145)
                        .setStockInDate(LocalDateTime.of(2024, 8, 31, 3, 7, 39))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(645)
                        .setStockInDate(LocalDateTime.of(2024, 9, 26, 16, 16, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2024, 9, 26, 22, 11, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2024, 9, 27, 21, 25, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(830)
                        .setStockInDate(LocalDateTime.of(2024, 9, 30, 23, 15, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2024, 9, 26, 23, 36, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2024, 9, 30, 20, 26, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(43)))
                        .setStockInQuantity(530)
                        .setStockInDate(LocalDateTime.of(2024, 9, 25, 0, 1, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(40)
                        .setStockInDate(LocalDateTime.of(2024, 9, 26, 13, 42, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(445)
                        .setStockInDate(LocalDateTime.of(2024, 9, 30, 6, 23, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2024, 9, 25, 20, 6, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2024, 9, 25, 1, 23, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(285)
                        .setStockInDate(LocalDateTime.of(2024, 10, 22, 19, 15, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 6, 16, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(60)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 12, 22, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(505)
                        .setStockInDate(LocalDateTime.of(2024, 11, 2, 8, 48, 15))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(685)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 18, 5, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 18, 48, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2024, 11, 2, 7, 42, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 16, 35, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 16, 53, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 14, 26, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(500)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 12, 18, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(150)
                        .setStockInDate(LocalDateTime.of(2024, 10, 29, 17, 37, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(375)
                        .setStockInDate(LocalDateTime.of(2024, 11, 2, 16, 26, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(425)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 20, 12, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(255)
                        .setStockInDate(LocalDateTime.of(2024, 10, 31, 3, 20, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 12, 13, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 14, 17, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 18, 21, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 12, 16, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 6, 46, 16))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 5, 9, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(160)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 10, 9, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2024, 10, 28, 21, 59, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(665)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 12, 27, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(425)
                        .setStockInDate(LocalDateTime.of(2024, 10, 29, 2, 21, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 2, 21, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 15, 2, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(415)
                        .setStockInDate(LocalDateTime.of(2024, 10, 31, 0, 32, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 10, 9, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 21, 1, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(25)
                        .setStockInDate(LocalDateTime.of(2024, 10, 31, 5, 20, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 4, 4, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 23, 17, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(235)
                        .setStockInDate(LocalDateTime.of(2024, 10, 27, 9, 6, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(43)))
                        .setStockInQuantity(730)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 7, 22, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2024, 10, 30, 0, 24, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(115)
                        .setStockInDate(LocalDateTime.of(2024, 10, 29, 23, 36, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2024, 11, 1, 9, 27, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(285)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 10, 15, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(46)))
                        .setStockInQuantity(315)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 8, 2, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 19, 44, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(685)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 3, 40, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 14, 51, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 17, 6, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 7, 23, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(355)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 23, 19, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2024, 12, 31, 20, 29, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 12, 30, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 7, 2, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(330)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 13, 42, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(565)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 16, 35, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 14, 5, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2024, 12, 31, 13, 29, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 23, 26, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 6, 6, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 10, 24, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 23, 50, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(680)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 15, 20, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(145)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 17, 41, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 10, 2, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 22, 13, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 1, 7, 6, 56, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(115)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 10, 59, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(620)
                        .setStockInDate(LocalDateTime.of(2024, 12, 31, 20, 20, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(52)))
                        .setStockInQuantity(320)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 6, 34, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(160)
                        .setStockInDate(LocalDateTime.of(2025, 1, 7, 1, 14, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 16, 32, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2025, 1, 1, 4, 56, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(470)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 7, 58, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(395)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 4, 39, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(46)))
                        .setStockInQuantity(655)
                        .setStockInDate(LocalDateTime.of(2025, 1, 6, 21, 0, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(320)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 1, 50, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(785)
                        .setStockInDate(LocalDateTime.of(2025, 1, 8, 23, 19, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(345)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 23, 12, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 18, 16, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 1, 6, 7, 18, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(90)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 9, 30, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 1, 9, 1, 12, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(375)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 14, 52, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(295)
                        .setStockInDate(LocalDateTime.of(2025, 1, 6, 19, 14, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 16, 14, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 1, 6, 4, 28, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(15)))
                        .setStockInQuantity(470)
                        .setStockInDate(LocalDateTime.of(2025, 1, 5, 18, 17, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(145)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 4, 3, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(325)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 11, 15, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(705)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 19, 30, 45))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 4, 56, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 21, 12, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 11, 22, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 0, 47, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(90)
                        .setStockInDate(LocalDateTime.of(2025, 1, 6, 9, 49, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 21, 5, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(43)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 5, 56, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(19)))
                        .setStockInQuantity(280)
                        .setStockInDate(LocalDateTime.of(2025, 1, 4, 2, 6, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 1, 7, 12, 40, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(25)
                        .setStockInDate(LocalDateTime.of(2025, 1, 8, 0, 55, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(375)
                        .setStockInDate(LocalDateTime.of(2025, 1, 7, 18, 32, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 1, 2, 4, 26, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(470)
                        .setStockInDate(LocalDateTime.of(2025, 1, 3, 3, 7, 16))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 1, 16, 10, 1, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 1, 12, 18, 21, 39))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(545)
                        .setStockInDate(LocalDateTime.of(2025, 1, 18, 9, 42, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(470)
                        .setStockInDate(LocalDateTime.of(2025, 1, 15, 7, 52, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(765)
                        .setStockInDate(LocalDateTime.of(2025, 1, 18, 14, 33, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 1, 14, 1, 46, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(50)
                        .setStockInDate(LocalDateTime.of(2025, 1, 12, 21, 3, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 1, 16, 17, 6, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(745)
                        .setStockInDate(LocalDateTime.of(2025, 1, 19, 12, 22, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 1, 15, 7, 48, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(560)
                        .setStockInDate(LocalDateTime.of(2025, 1, 15, 8, 6, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(52)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 1, 14, 1, 7, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 1, 18, 19, 42, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(645)
                        .setStockInDate(LocalDateTime.of(2025, 1, 12, 16, 34, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 1, 19, 7, 54, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2025, 1, 17, 17, 22, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(805)
                        .setStockInDate(LocalDateTime.of(2025, 3, 12, 18, 58, 15))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(37)))
                        .setStockInQuantity(430)
                        .setStockInDate(LocalDateTime.of(2025, 3, 16, 11, 33, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 3, 15, 1, 30, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(355)
                        .setStockInDate(LocalDateTime.of(2025, 3, 11, 11, 57, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(425)
                        .setStockInDate(LocalDateTime.of(2025, 3, 13, 21, 28, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(170)
                        .setStockInDate(LocalDateTime.of(2025, 3, 16, 2, 20, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(560)
                        .setStockInDate(LocalDateTime.of(2025, 3, 13, 17, 3, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 3, 11, 17, 57, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2025, 3, 13, 10, 18, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(260)
                        .setStockInDate(LocalDateTime.of(2025, 3, 15, 10, 40, 15))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(43)))
                        .setStockInQuantity(500)
                        .setStockInDate(LocalDateTime.of(2025, 3, 13, 21, 17, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(345)
                        .setStockInDate(LocalDateTime.of(2025, 3, 12, 9, 12, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 3, 14, 1, 59, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2025, 3, 11, 21, 18, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 3, 16, 9, 41, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(665)
                        .setStockInDate(LocalDateTime.of(2025, 3, 15, 6, 41, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(37)))
                        .setStockInQuantity(425)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 8, 26, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 8, 58, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 18, 30, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(515)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 18, 41, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 10, 59, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(280)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 20, 53, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 11, 46, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 12, 8, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(46)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 16, 1, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(90)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 22, 51, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(545)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 17, 15, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(70)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 11, 2, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 21, 36, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(335)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 9, 0, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 10, 25, 39))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 13, 6, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(825)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 1, 11, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 9, 37, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 7, 29, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 21, 13, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 17, 8, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(855)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 20, 59, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 1, 46, 15))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 19, 36, 39))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 22, 34, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 11, 31, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 17, 22, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 7, 9, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(285)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 10, 45, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 0, 43, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(335)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 22, 12, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 9, 49, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(705)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 22, 26, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(200)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 8, 3, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 0, 29, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 15, 29, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 8, 32, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(15)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 19, 23, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 20, 8, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 1, 30, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(1030)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 13, 10, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 17, 22, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 14, 37, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(335)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 20, 32, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 21, 33, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 11, 9, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 0, 2, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 22, 6, 26))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(260)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 10, 49, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2025, 4, 5, 23, 23, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(525)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 21, 26, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(825)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 16, 55, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(145)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 20, 42, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 21, 18, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(430)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 12, 22, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(680)
                        .setStockInDate(LocalDateTime.of(2025, 4, 11, 15, 50, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 4, 52, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 1, 3, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(930)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 1, 21, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(395)
                        .setStockInDate(LocalDateTime.of(2025, 4, 7, 7, 43, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 4, 9, 17, 16, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(630)
                        .setStockInDate(LocalDateTime.of(2025, 4, 10, 16, 33, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(25)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 17, 36, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(200)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 5, 4, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 6, 20, 23, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 4, 8, 13, 4, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 5, 11, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(19)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 4, 12, 23, 43, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 15, 37, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 23, 31, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 15, 25, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(1030)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 4, 54, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(830)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 0, 43, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 5, 11, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(630)
                        .setStockInDate(LocalDateTime.of(2025, 4, 12, 18, 34, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 12, 19, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 5, 10, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(15)))
                        .setStockInQuantity(50)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 3, 43, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 19, 15, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(60)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 18, 51, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(545)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 22, 44, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 6, 32, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 5, 1, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 12, 23, 43, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(120)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 3, 20, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 21, 19, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 21, 34, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 19, 49, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 14, 21, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 15, 2, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 13, 57, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(52)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 16, 48, 57))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 5, 46, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 4, 12, 16, 18, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(50)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 1, 53, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 11, 24, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(235)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 22, 25, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(620)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 10, 51, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 8, 49, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 9, 43, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 6, 27, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(52)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 8, 22, 41))
        );


        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2025, 4, 16, 1, 28, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 4, 16, 23, 15, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 8, 47, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 1, 7, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 5, 5, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 4, 14, 19, 6, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 1, 36, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2025, 4, 13, 21, 30, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 16, 18, 7, 16))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(50)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 14, 53, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(545)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 13, 40, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 15, 7, 48, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 4, 16, 19, 24, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(765)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 6, 31, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 10, 14, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 3, 25, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 15, 34, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 1, 38, 16))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 4, 23, 9, 16, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(430)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 9, 6, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(515)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 6, 42, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 19, 46, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 19, 40, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(345)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 8, 18, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 14, 35, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 5, 40, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(200)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 15, 14, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 18, 3, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 7, 51, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 7, 12, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(55)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 11, 7, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(785)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 16, 28, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(805)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 11, 53, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(500)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 13, 50, 43))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 20, 2, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(830)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 19, 54, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 4, 23, 17, 24, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(375)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 21, 56, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(210)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 17, 0, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 14, 15, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(680)
                        .setStockInDate(LocalDateTime.of(2025, 4, 23, 3, 29, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(705)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 6, 37, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(55)))
                        .setStockInQuantity(355)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 19, 40, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(15)))
                        .setStockInQuantity(200)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 7, 18, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(130)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 8, 22, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(52)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 18, 40, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 16, 56, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 4, 23, 3, 57, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 4, 17, 12, 25, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(60)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 10, 22, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 18, 1, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 20, 57, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(255)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 16, 58, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 15, 34, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(780)
                        .setStockInDate(LocalDateTime.of(2025, 4, 20, 11, 3, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(1030)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 16, 18, 26))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 4, 23, 6, 15, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(630)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 4, 5, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(290)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 3, 33, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(705)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 0, 59, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2025, 4, 18, 14, 26, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 4, 19, 4, 6, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(255)
                        .setStockInDate(LocalDateTime.of(2025, 4, 22, 4, 2, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 3, 51, 39))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(685)
                        .setStockInDate(LocalDateTime.of(2025, 4, 21, 21, 37, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 5, 21, 16, 31, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(980)
                        .setStockInDate(LocalDateTime.of(2025, 5, 25, 5, 6, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 5, 26, 10, 9, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(375)
                        .setStockInDate(LocalDateTime.of(2025, 5, 22, 6, 31, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(325)
                        .setStockInDate(LocalDateTime.of(2025, 5, 28, 7, 22, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 5, 27, 4, 42, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(260)
                        .setStockInDate(LocalDateTime.of(2025, 5, 27, 19, 30, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(170)
                        .setStockInDate(LocalDateTime.of(2025, 5, 24, 12, 6, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 5, 27, 2, 26, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(755)
                        .setStockInDate(LocalDateTime.of(2025, 5, 25, 16, 19, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(905)
                        .setStockInDate(LocalDateTime.of(2025, 5, 25, 1, 2, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(46)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 5, 25, 7, 42, 53))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 5, 28, 5, 34, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(190)
                        .setStockInDate(LocalDateTime.of(2025, 5, 23, 22, 3, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(285)
                        .setStockInDate(LocalDateTime.of(2025, 5, 24, 23, 41, 25))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(42)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 5, 28, 7, 32, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 5, 23, 10, 50, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(145)
                        .setStockInDate(LocalDateTime.of(2025, 5, 28, 5, 2, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(500)
                        .setStockInDate(LocalDateTime.of(2025, 5, 26, 0, 12, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2025, 5, 25, 15, 28, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 5, 22, 5, 12, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2025, 5, 24, 10, 23, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(655)
                        .setStockInDate(LocalDateTime.of(2025, 5, 26, 16, 37, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 5, 28, 10, 58, 26))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 5, 23, 20, 56, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 5, 26, 10, 37, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 5, 24, 0, 25, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 3, 37, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(23)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 12, 38, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(395)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 17, 22, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 3, 25, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(110)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 7, 0, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(805)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 1, 30, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(330)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 16, 15, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 1, 45, 28))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 12, 6, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 16, 53, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 15, 53, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 23, 33, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 2, 13, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(19)))
                        .setStockInQuantity(120)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 3, 20, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(60)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 12, 44, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 23, 45, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 12, 54, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 6, 13, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 11, 31, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(525)
                        .setStockInDate(LocalDateTime.of(2025, 6, 4, 22, 37, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(140)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 16, 8, 57))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(325)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 14, 8, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 23, 20, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 10, 55, 57))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(235)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 9, 7, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 17, 58, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 2, 48, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(590)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 11, 3, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(55)))
                        .setStockInQuantity(560)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 10, 49, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(680)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 20, 12, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(65)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 20, 39, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(480)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 11, 53, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 0, 28, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 6, 5, 20, 8, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 17, 56, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 5, 12, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(265)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 3, 28, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(35)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 18, 5, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 18, 26, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(60)))
                        .setStockInQuantity(135)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 18, 50, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 15, 13, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 12, 49, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(580)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 23, 48, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(410)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 9, 42, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 10, 8, 57))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(37)))
                        .setStockInQuantity(590)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 2, 24, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 17, 3, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 22, 50, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(37)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 4, 21, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(395)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 10, 33, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 17, 53, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 21, 0, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(665)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 5, 53, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 6, 7, 23, 46, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(180)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 0, 11, 32))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 14, 57, 23))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 2, 16, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 3, 18, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 11, 24, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(955)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 16, 32, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 11, 26, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 23, 27, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(1030)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 5, 36, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 1, 39, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 14, 57, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 5, 5, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(645)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 9, 21, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(58)))
                        .setStockInQuantity(485)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 14, 42, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 20, 20, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(59)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 10, 28, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 13, 22, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(34)))
                        .setStockInQuantity(50)
                        .setStockInDate(LocalDateTime.of(2025, 6, 11, 10, 16, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 10, 41, 52))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 9, 10, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(60)))
                        .setStockInQuantity(655)
                        .setStockInDate(LocalDateTime.of(2025, 6, 9, 10, 42, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(195)
                        .setStockInDate(LocalDateTime.of(2025, 6, 8, 21, 54, 28))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 6, 12, 5, 57, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 10, 9, 47, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(33)))
                        .setStockInQuantity(745)
                        .setStockInDate(LocalDateTime.of(2025, 6, 6, 21, 21, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(290)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 17, 26, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 6, 27, 15, 9, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 7, 3, 21, 14, 8))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(805)
                        .setStockInDate(LocalDateTime.of(2025, 7, 2, 3, 47, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(350)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 7, 30, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(35)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 21, 51, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(12)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2025, 7, 3, 23, 35, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(275)
                        .setStockInDate(LocalDateTime.of(2025, 7, 2, 17, 42, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 16, 19, 37))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(48)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 18, 53, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 7, 1, 5, 8, 40))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(565)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 23, 15, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(140)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 19, 58, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(225)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 17, 52, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(85)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 20, 41, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2025, 6, 28, 21, 22, 13))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(725)
                        .setStockInDate(LocalDateTime.of(2025, 7, 1, 16, 30, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(505)
                        .setStockInDate(LocalDateTime.of(2025, 7, 1, 7, 55, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 6, 27, 13, 58, 29))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(515)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 0, 9, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 14, 10, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(25)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 11, 16, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 7, 2, 22, 0, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(56)))
                        .setStockInQuantity(75)
                        .setStockInDate(LocalDateTime.of(2025, 7, 4, 4, 26, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 7, 1, 7, 20, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(655)
                        .setStockInDate(LocalDateTime.of(2025, 7, 3, 9, 47, 38))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(345)
                        .setStockInDate(LocalDateTime.of(2025, 6, 28, 10, 35, 36))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(930)
                        .setStockInDate(LocalDateTime.of(2025, 7, 2, 4, 48, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 15, 24, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(20)
                        .setStockInDate(LocalDateTime.of(2025, 7, 1, 23, 9, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2025, 7, 2, 21, 37, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(215)
                        .setStockInDate(LocalDateTime.of(2025, 7, 3, 19, 10, 33))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 13, 31, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(36)))
                        .setStockInQuantity(185)
                        .setStockInDate(LocalDateTime.of(2025, 6, 28, 15, 34, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(11)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 6, 29, 18, 28, 35))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 6, 28, 23, 55, 59))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(125)
                        .setStockInDate(LocalDateTime.of(2025, 6, 28, 9, 1, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 6, 30, 19, 56, 4))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(26)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 7, 13, 7, 24, 0))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 7, 12, 2, 14, 58))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(55)))
                        .setStockInQuantity(530)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 23, 41, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2025, 7, 16, 11, 26, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(210)
                        .setStockInDate(LocalDateTime.of(2025, 7, 13, 4, 53, 42))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(28)))
                        .setStockInQuantity(545)
                        .setStockInDate(LocalDateTime.of(2025, 7, 10, 4, 34, 11))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(31)))
                        .setStockInQuantity(290)
                        .setStockInDate(LocalDateTime.of(2025, 7, 10, 2, 0, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(385)
                        .setStockInDate(LocalDateTime.of(2025, 7, 12, 8, 15, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(325)
                        .setStockInDate(LocalDateTime.of(2025, 7, 12, 22, 14, 2))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 7, 12, 10, 27, 12))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(785)
                        .setStockInDate(LocalDateTime.of(2025, 7, 16, 5, 14, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(22)))
                        .setStockInQuantity(80)
                        .setStockInDate(LocalDateTime.of(2025, 7, 14, 0, 25, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(15)))
                        .setStockInQuantity(380)
                        .setStockInDate(LocalDateTime.of(2025, 7, 14, 21, 9, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(39)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 7, 21, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(95)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 17, 32, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(905)
                        .setStockInDate(LocalDateTime.of(2025, 7, 14, 13, 5, 17))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(905)
                        .setStockInDate(LocalDateTime.of(2025, 7, 16, 2, 1, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(575)
                        .setStockInDate(LocalDateTime.of(2025, 7, 12, 4, 58, 7))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 3, 19, 5))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(53)))
                        .setStockInQuantity(665)
                        .setStockInDate(LocalDateTime.of(2025, 7, 10, 1, 12, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(18)))
                        .setStockInQuantity(525)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 7, 17, 54))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(205)
                        .setStockInDate(LocalDateTime.of(2025, 7, 14, 23, 23, 20))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 7, 14, 7, 58, 56))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(44)))
                        .setStockInQuantity(405)
                        .setStockInDate(LocalDateTime.of(2025, 7, 11, 7, 13, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(29)))
                        .setStockInQuantity(115)
                        .setStockInDate(LocalDateTime.of(2025, 7, 13, 12, 45, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(555)
                        .setStockInDate(LocalDateTime.of(2025, 7, 10, 0, 26, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(19)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 7, 13, 6, 30, 24))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 7, 21, 16, 6, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(55)))
                        .setStockInQuantity(565)
                        .setStockInDate(LocalDateTime.of(2025, 7, 21, 21, 50, 1))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(530)
                        .setStockInDate(LocalDateTime.of(2025, 7, 23, 13, 5, 18))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 7, 21, 17, 39, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(325)
                        .setStockInDate(LocalDateTime.of(2025, 7, 17, 10, 1, 9))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2025, 7, 21, 8, 32, 47))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 15, 14, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(140)
                        .setStockInDate(LocalDateTime.of(2025, 7, 26, 22, 22, 30))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 7, 29, 12, 2, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 7, 28, 16, 24, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(13)))
                        .setStockInQuantity(55)
                        .setStockInDate(LocalDateTime.of(2025, 8, 2, 1, 14, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(54)))
                        .setStockInQuantity(255)
                        .setStockInDate(LocalDateTime.of(2025, 7, 30, 8, 33, 34))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(45)))
                        .setStockInQuantity(245)
                        .setStockInDate(LocalDateTime.of(2025, 7, 29, 14, 44, 53))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(425)
                        .setStockInDate(LocalDateTime.of(2025, 7, 26, 22, 50, 27))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(25)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 14, 13, 6))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(50)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 7, 31, 19, 20, 51))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(19)))
                        .setStockInQuantity(585)
                        .setStockInDate(LocalDateTime.of(2025, 8, 2, 3, 20, 50))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(24)))
                        .setStockInQuantity(305)
                        .setStockInDate(LocalDateTime.of(2025, 7, 29, 15, 46, 31))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(38)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 6, 29, 45))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(41)))
                        .setStockInQuantity(605)
                        .setStockInDate(LocalDateTime.of(2025, 8, 1, 7, 45, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(40)))
                        .setStockInQuantity(230)
                        .setStockInDate(LocalDateTime.of(2025, 7, 30, 17, 48, 22))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(45)
                        .setStockInDate(LocalDateTime.of(2025, 7, 30, 22, 16, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(9)))
                        .setStockInQuantity(115)
                        .setStockInDate(LocalDateTime.of(2025, 7, 28, 8, 13, 49))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(49)))
                        .setStockInQuantity(755)
                        .setStockInDate(LocalDateTime.of(2025, 8, 2, 12, 34, 55))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(16)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 7, 30, 6, 7, 41))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(57)))
                        .setStockInQuantity(730)
                        .setStockInDate(LocalDateTime.of(2025, 7, 28, 4, 2, 3))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(14)))
                        .setStockInQuantity(480)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 7, 20, 19))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(51)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 8, 2, 3, 17, 44))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(165)
                        .setStockInDate(LocalDateTime.of(2025, 8, 2, 1, 52, 56))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(32)))
                        .setStockInQuantity(525)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 3, 27, 21))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(21)))
                        .setStockInQuantity(445)
                        .setStockInDate(LocalDateTime.of(2025, 7, 31, 14, 0, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(47)))
                        .setStockInQuantity(805)
                        .setStockInDate(LocalDateTime.of(2025, 8, 1, 13, 29, 4))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(10)))
                        .setStockInQuantity(365)
                        .setStockInDate(LocalDateTime.of(2025, 8, 1, 13, 57, 10))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(27)))
                        .setStockInQuantity(175)
                        .setStockInDate(LocalDateTime.of(2025, 7, 27, 23, 17, 14))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(20)))
                        .setStockInQuantity(455)
                        .setStockInDate(LocalDateTime.of(2025, 7, 31, 3, 40, 46))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(17)))
                        .setStockInQuantity(60)
                        .setStockInDate(LocalDateTime.of(2025, 7, 31, 2, 3, 51))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(105)
                        .setStockInDate(LocalDateTime.of(2025, 7, 30, 4, 6, 48))
        );

        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(30)))
                        .setStockInQuantity(155)
                        .setStockInDate(LocalDateTime.of(2025, 8, 1, 4, 7, 21))
        );

    }

    private static void initializeAppointments() {
        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(1))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 53))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 28, 10, 15))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 4, 8, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 4, 8, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(2))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 7))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 29, 14, 45))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 5, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 5, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(3))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 92))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 30, 9, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 6, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 6, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(4))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 18))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 31, 11, 20))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 7, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 7, 7, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(5))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 45))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 1, 16, 5))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 8, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 8, 7, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(6))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 60))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 2, 8, 50))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 9, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 9, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(7))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 3))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 3, 11, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 10, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 10, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(8))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 77))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 4, 13, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 11, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 11, 7, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(9))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 22))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 5, 9, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 12, 9, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 12, 9, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(10))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 88))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 6, 15, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 13, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 13, 14, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(11))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 11))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 7, 10, 5))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 14, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 14, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(12))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 65))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 8, 12, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 15, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 15, 10, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(13))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 30))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 9, 17, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 16, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 16, 10, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(14))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 99))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 10, 8, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 17, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 17, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(15))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 42))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 15))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 11, 11, 55))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 18, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 18, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(16))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 71))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 12, 14, 20))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 19, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 19, 14, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(17))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 6))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 13, 9, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 20, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 20, 10, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(18))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 14, 16, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 21, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 21, 14, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(19))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 25))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 15, 10, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 22, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 22, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(20))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 50))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 16, 13, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 23, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 23, 14, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(21))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 17, 8, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 24, 8, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 24, 9, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(22))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 10))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 18, 15, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 25, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 25, 8, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(23))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 70))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 19, 11, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 26, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 26, 8, 0))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(24))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 33))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 20, 14, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 27, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 27, 8, 0))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(25))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 95))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 21, 9, 15))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 28, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 28, 8, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(26))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 48))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 22, 16, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 29, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 29, 8, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(27))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 13))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 23, 10, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 30, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 30, 8, 0))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(28))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 75))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 24, 12, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 31, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 31, 8, 0))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(29))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 28))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 25, 9, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 9, 1, 9, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 9, 1, 10, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(30))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 82))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 26, 15, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 9, 2, 14, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 9, 2, 15, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

    }

    private static void initializeConsultation1() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(1))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 100))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 29, 17, 41))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(2))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 68))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 12, 4, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(3))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 23))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 15))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 22, 1, 57))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(4))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 24, 22, 48))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(5))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 34))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 7, 4, 48))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(6))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 62))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 24, 6, 44))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(7))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 11))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 23, 1, 21))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(8))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 5, 8, 44))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(9))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 65))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 19, 4, 26))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(10))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 15))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 31, 22, 7))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(11))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 65))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 12, 11, 25))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(12))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 12))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 6, 2, 7))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(13))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 82))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 26, 13, 9))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(14))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 58))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 26, 14, 1))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(15))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 79))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 12, 23, 44))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(16))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 49))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 29, 6, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(17))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 18, 21, 12))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(18))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 55))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 12, 19, 36))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(19))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 37))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 21, 21, 12))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(20))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 27))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 23, 14, 26))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

    }

    private static void initializeConsultation2() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(21))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 96))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 29, 18, 27))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(22))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 20))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 15, 13, 46))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(23))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 70))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 16, 9, 40))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(24))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 56))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 3, 0, 54))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(25))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 55))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 15, 15, 9))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(26))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 10, 2, 41))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(27))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 9))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 31, 10, 8))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(28))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 3))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 27, 15, 58))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(29))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 21))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 13, 3, 6))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(30))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 34))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 9, 20, 16, 36))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(31))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 25))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 21, 14, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(32))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 11))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 2, 12, 7))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(33))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 15, 1, 42))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(34))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 55))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 28, 18, 11))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(35))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 22))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2024, 9, 7, 22, 30))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(36))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 88))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 7, 1, 39))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(37))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 38))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 11, 5, 13))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(38))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 95))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 27, 9, 53))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(39))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 90))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 29, 16, 6))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(40))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 5))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 20, 16, 31))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

    }

    private static void initializeConsultation3() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(41))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 28))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 16, 21, 13))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(42))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 43))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 15))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 16, 13, 53))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(43))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 61))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 1, 11, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(44))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 59))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 25, 7, 2))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(45))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 98))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 18, 21, 37))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(46))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 37))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 17, 12, 21))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(47))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 79))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 10, 4, 26))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(48))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 62))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 28, 17, 25))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(49))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 6))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 6, 12, 8))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(50))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 17))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 17, 15, 18))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(51))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 15))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 13, 5, 32))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(52))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 38))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 15))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 18, 14, 37))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(53))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 33))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 1, 6, 24))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(54))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 92))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 10, 0, 50))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(55))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 87))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 23, 2, 30))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(56))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 97))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 16, 9, 7))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(57))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 92))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 19, 23, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(58))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 67))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 9, 18, 9, 26))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(59))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 93))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 9, 3, 0))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(60))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 84))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 6, 22, 52))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

    }

    private static void initializeConsultation4() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(61))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 68))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 29, 7, 42))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(62))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 20))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 27, 17, 37))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(63))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 64))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 7, 16, 8))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(64))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 17))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 10, 9, 42))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(65))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 84))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 19, 18, 12))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(66))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 95))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 3, 8, 17))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(67))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 76))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 5, 12, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(68))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 98))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 4, 10, 32))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(69))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 43))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 30, 20, 34))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(70))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 38))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 15, 10, 49))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(71))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 84))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 3, 12, 53))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(72))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 96))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 29, 5, 13))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(73))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 79))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 9, 16, 10))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(74))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 57))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 13, 19, 14))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(75))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 60))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 25, 7, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(76))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 29))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 28, 16, 10))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(77))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 98))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 16, 16, 52))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(78))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 54))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 18, 21, 3))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(79))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 58))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 1, 9, 51))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(80))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 1))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 20, 20, 15))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

    }

    private static void initializeConsultation5() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(81))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 67))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 12, 9, 13))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(82))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 67))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 28, 2, 56))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(83))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 67))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 11, 4, 21))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(84))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 60))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 25, 8, 46))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(85))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 24))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 24, 16, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(86))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 94))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 19, 13, 14))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(87))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 62))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 24, 0, 1))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(88))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 63))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 25, 9, 9))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(89))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 11))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 3, 9, 12))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(90))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 19, 15, 23))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(91))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 65))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 1, 21, 46))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(92))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 21))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 26, 4, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(93))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 63))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 10, 21, 13))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(94))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 7, 23, 55))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(95))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 70))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 2, 6, 18, 16))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(96))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 57))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 19, 11, 33))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(97))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 43))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2024, 9, 6, 16, 43))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(98))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 93))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 3, 2, 52))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(99))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 37))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 25, 6, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(100))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 39))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 24, 21, 48))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

    }

    private static void initializeConsultation6() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(101))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 45))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 29, 12, 9))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(102))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 60))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 10, 2, 24))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(103))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 87))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 2, 20, 20))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(104))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 66))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 13, 7, 48))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tinnitus")
                                .setDescription("Patient presents with symptoms related to tinnitus, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(105))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 89))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 4, 0, 21))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(106))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 68))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 21, 13, 6))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(107))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 15))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Dizziness.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 20, 5, 1))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(108))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 3, 19, 3, 29))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(109))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 54))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 20, 12, 46))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(110))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 5, 5, 25))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(111))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 57))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2025, 1, 8, 11, 19))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 46))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 42))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Autism spectrum disorder")
                                .setDescription("Patient presents with symptoms related to autism spectrum disorder, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(112))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 92))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 24, 17, 50))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(113))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 66))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 24, 23, 53))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Chickenpox")
                                .setDescription("Patient presents with symptoms related to chickenpox, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 52))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 36))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(114))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 47))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 27, 23, 39))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(115))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 54))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 13, 20, 0))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoporosis")
                                .setDescription("Patient presents with symptoms related to osteoporosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 25))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 37))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 48))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Fractures")
                                .setDescription("Patient presents with symptoms related to fractures, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(116))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 93))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Fever.")
                        .setConsultedAt(LocalDateTime.of(2024, 10, 28, 9, 20))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(117))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 13))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 6, 12, 19, 2))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 59))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 60))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 12))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 35))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 56))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(118))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 30))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 3, 17, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 45))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 38))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 40))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Measles")
                                .setDescription("Patient presents with symptoms related to measles, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 57))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 14))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 51))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 21))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 10))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(119))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 14))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 17, 22, 38))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 26))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 55))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 50))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 22))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 15))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 39))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 54))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 30))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 32))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 18))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 27))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 44))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 29))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 24))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 19))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(120))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 90))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2024, 9, 4, 18, 3))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 23))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 31))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 17))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 33))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 53))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 47))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 41))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 11))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 20))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 58))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 49))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 16))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 28))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 43))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 9))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 13))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 34))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );
    }

    private static void initializeDispenses() {
        for (var consultation : Database.consultationsList)
            DispensaryController.queueConsultation(consultation);
        Database.dispensaryQueueList.clear();
    }
}